application-local.properties

# Favor Vanguard Spring Core over Spring Boot.
# https://vanguard.haydle.com/questions/5127-is-there-a-heirachy-for-bamboo-properties
#
# Spring Boot configuration
# Hierarchy: http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# Common properties: http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#appendix
#
# This file should be used to set properties when the "local" profile is active



---------------------------------------------
application.properties

## Favor Vanguard Spring Core over Spring Boot.
# https://vanguard.haydle.com/questions/5127-is-there-a-heirachy-for-bamboo-properties
#
# Spring Boot configuration
# Hierarchy: http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# Common properties: http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#appendix
#
# This file should be used to set properties that are safe to inherit by any profile
spring.application.name=sma-data-transformer.webservice

# HVLM log level
# 0=TRACE 
# 1=INFO 
# 2=WARNING 
# 3=ERROR 
# 4=ALERT 
DiagnosticsLogThreshold=0
LogSink=CONSOLE;FILE(C:/logs)=DIAG,REP;
AppName=APP

# Tomcat gzip compression
server.tomcat.compressableMimeTypes=application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript,application/x-javascript,csv/comma-separated-values,image/png,image/gif,image/jpeg
# Min response length in bytes, can use server.tomcat.compression=on for default 2048 byte size
server.tomcat.compression=100

# Jersey default properties
jersey.config.server.debug=false

# JPA default properties
spring.jpa.show-sql=false

# Hystrix default properties
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=30000
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.fallback.enabled=true
hystrix.command.default.circuitBreaker.enabled=true
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
hystrix.threadpool.default.coreSize=10 

---------------------------------------------------------------
build-plan.properties

ephemeral.organization=ICS
ephemeral.space=EPHEMERAL
ephemeral.qualifier=pre
non.prod.organization=ICS
non.prod.space=DEVELOPMENT
non.prod.qualifier=pre
prod.organization=ICS
prod.space=PRODUCTION
prod.qualifier=pre
deployment.type=internal


-------------------------------------------------------
package com.vanguard.corp.ics.portal.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;

@Configuration
@Primary
public class PortalSDKConfiguration {

	@Value("$sma-data-transformer.webservice-{portal.products.endpoint}")
	private String portalProductEndpoint;

	@Value("$sma-data-transformer.webservice-{portal.references.endpoint}")
	private String portalReferenceEndpoint;

	@Value("$sma-data-transformer.webservice-{portal.tokenURL}")
	private String tokenURL;

	@Value("$sma-data-transformer.webservice-{portal.username}")
	private String portalUsername;

	@Value("$sma-data-transformer.webservice-{portal.password}")
	private String portalPassword;

	@Value("$sma-data-transformer.webservice-{portal.retryCount}")
	private int retryCount;

	public String getPortalProductEndpoint() {
		return portalProductEndpoint;
	}

	public void setPortalProductEndpoint(String portalProductEndpoint) {
		this.portalProductEndpoint = portalProductEndpoint;
	}

	public String getPortalReferenceEndpoint() {
		return portalReferenceEndpoint;
	}

	public void setPortalReferenceEndpoint(String portalReferenceEndpoint) {
		this.portalReferenceEndpoint = portalReferenceEndpoint;
	}

	public String getTokenURL() {
		return tokenURL;
	}

	public void setTokenURL(String tokenURL) {
		this.tokenURL = tokenURL;
	}

	public String getPortalUsername() {
		return portalUsername;
	}

	public void setPortalUsername(String portalUsername) {
		this.portalUsername = portalUsername;
	}

	public String getPortalPassword() {
		return portalPassword;
	}

	public void setPortalPassword(String portalPassword) {
		this.portalPassword = portalPassword;
	}

	public int getRetryCount() {
		return retryCount;
	}

	public void setRetryCount(int retryCount) {
		this.retryCount = retryCount;
	}

}

